/*** Color Defs */

:root {
  --color-text: hsl(45deg, 4%, 10%);
  --color-foc: hsl(45deg, 4%, 20%);
  --color-link: hsl(45deg, 4%, 40%);
  --color-fig: hsl(45deg, 4%, 80%);
  --color-hl: hsla(45deg, 30%, 70%, 50%);
  --color-bg: hsl(45deg, 4%, 98%);
  color-scheme: light;
}
@media screen and (prefers-color-scheme: dark) {
  :root {
    --color-text: hsl(45deg, 4%, 80%);
    --color-foc: hsl(45deg, 4%, 70%);
    --color-link: hsl(45deg, 4%, 60%);
    --color-fig: hsl(45deg, 4%, 20%);
    --color-hl: hsla(45deg, 30%, 20%, 50%);
    --color-bg: hsl(45deg, 4%, 4%);
    color-scheme: dark;
  }
}

/*** Font Defs */

:root {
  --symbols: 'Noto Sans Math', 'Noto Sans Symbols', 'Noto Sans Symbols 2';

  --sc: 'Bitter CJK', 'Noto Serif SC', var(--symbols), serif;
  --jp: 'Bitter CJK', 'Noto Serif JP', var(--symbols), serif;
  --kr: 'Bitter CJK', 'Noto Serif KR', var(--symbols), serif;

  --arabic:     'Bitter', 'Noto Naskh Arabic',     var(--symbols), serif;
  --devanagari: 'Bitter', 'Noto Serif Devanagari', var(--symbols), serif;
  --georgian:   'Bitter', 'Noto Serif Georgian',   var(--symbols), serif;
  --greek:      'Noto Serif',                      var(--symbols), serif;
  --latin:      'Bitter',                          var(--symbols), serif;

  --ipa: 'Charis SIL Phon', serif;
  --monospace: 'Fira Code VF', 'Noto Serif SC', var(--symbols), monospace;
}

/*** Language Fonts */

body:lang(zh) { font-family: var(--sc); }
:lang(ja) { font-family: var(--jp); }
:lang(ko) { font-family: var(--kr); }

:lang(ar), :lang(sd) { font-family: var(--arabic); }
:lang(el) { font-family: var(--greek); line-height: calc(var(--lh) * 1em - 1.5px); }
:lang(hi) { font-family: var(--devanagari); }
:lang(ka) { font-family: var(--georgian); }

:lang(ipa) { font-family: var(--ipa); line-height: calc(var(--lh) * 1em - 1px); }

:not(:lang(zh), :lang(ja), :lang(ko), :lang(ipa),
  :lang(ar), :lang(sd), :lang(el), :lang(hi), :lang(ka)) {
  font-family: var(--latin);
}

/*** Other Variables */

:root {
  --lh: 1.5;
}

/*** Global Style */

body {
  color: var(--color-text);
  background-color: var(--color-bg);
  line-height: calc(var(--lh) * 1rem);
}

* {
  text-decoration-color: currentColor;
  text-decoration-thickness: from-font;
}

::selection, :target {
  background-color: var(--color-hl);
}

/*** Block Elements */

.float {
  margin: 0 0 0 1rem;
  float: right;
}
@media screen and (max-width: 480px) {
  .float {
    margin: inherit;
    float: none;
  }
}

h1 {
  font-weight: normal;
}
h1 {
  line-height: calc(var(--lh) * 2rem);
}
h2 {
  line-height: calc(var(--lh) * 1.5rem);
}
h1 + h2, h2 + h3, h3 + h4, h4 + h5, h5 + h6 {
  margin-top: calc(var(--lh) * 0.5rem);
}
h1, h2, h3, h4, h5, h6 {
  margin: calc(var(--lh) * 1rem) 0 calc(var(--lh) * 0.5rem) 0;
}

p, blockquote, :is(ul, ol):not(li > *), pre, img, video, figure {
  margin: calc(var(--lh) * 0.5rem) 0 calc(var(--lh) * 1rem) 0;
}

h1, h2, h3, h4, h5, h6, p, blockquote, li {
  text-align: justify;
}

ul, ol {
  padding-left: 1.5rem;
}
:is(ul, ol) ::marker {
  line-height: 0;
}

blockquote {
  margin-left: 1rem;
  border-left: 3px solid var(--color-fig);
  padding-left: calc(1rem - 3px);
  overflow: visible;
}
@media screen and (max-width: 480px) {
  blockquote {
    margin-left: 0;
  }
}

hr {
  margin: calc(var(--lh) * 1rem - 0.5px) auto;
  width: 38%;
  border: none;
  border-top: 1px solid var(--color-fig);
}

table {
  margin: calc(var(--lh) * 0.5rem) 0;
  border-collapse: collapse;
}
thead {
  border-bottom: 3px solid var(--color-fig);
}
tr {
  border-bottom: 1px solid var(--color-fig);
}
th, td {
  padding: 6px;
  text-align: left;
}

img, video {
  display: block;
  max-width: 100%;
  margin: auto;
}

figcaption {
  text-align: center;
  font-size: smaller;
}
figcaption p {
  text-align: center;
}
figcaption > :first-child {
  margin-top: 0;
}
figcaption > :last-child {
  margin-bottom: 0;
}

/*** Inline Elements */

i:lang(zh), em:lang(zh) {
  font-style: normal;
  text-decoration-line: underline;
  text-decoration-style: wavy;
}

a {
  color: var(--color-link);
  text-decoration-style: dashed;
}
a:hover {
  color: var(--color-foc);
  text-decoration-style: solid;
}

code, kbd, pre, samp {
  border-radius: 0.4rem;
  line-height: calc(var(--lh) * 1rem - 1px);
  background-color: var(--color-hl);
  font-family: var(--monospace);
  white-space: pre-wrap;
}
kbd {
  border-color: var(--color-fig);
  border-width: 1px;
  border-style: solid;
  padding: 0 2px;
  background-color: transparent;
}

pre {
  padding: calc(var(--lh) * 0.5rem) 1em;
}
pre, pre code {
  line-height: inherit;
  color: #93a1a1;
  background-color: #002b36;
}

@supports selector(:has(ruby)) {
  :is(p, ul, ol):has(ruby) {
    line-height: calc(var(--lh) * 1.5rem);
  }
  ruby rt {
    font-size: calc(var(--lh) * 0.5em);
  }
}
@supports not selector(:has(ruby)) {
  ruby {
    display: inline-flex;
    flex-direction: column-reverse;
    flex-wrap: wrap;
    align-items: center;
    height: calc(var(--lh) * 1.5rem);
  }
  ruby rt {
    font-size: calc(var(--lh) * 0.5em);
    line-height: 0.75;
  }  
}
